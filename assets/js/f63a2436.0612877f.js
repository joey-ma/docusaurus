"use strict";(self.webpackChunkdocusaurus_v2=self.webpackChunkdocusaurus_v2||[]).push([[8782],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),d=o,g=p["".concat(s,".").concat(d)]||p[d]||f[d]||a;return r?n.createElement(g,c(c({ref:t},u),{},{components:r})):n.createElement(g,c({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(7462),o=(r(7294),r(4137));const a={},c="Regex",i={unversionedId:"regex",id:"regex",title:"Regex",description:"To match a string that contains only those characters (or an empty string), try",source:"@site/docs/regex.md",sourceDirName:".",slug:"/regex",permalink:"/docusaurus.v2/docs/regex",draft:!1,editUrl:"https://github.com/joey-ma/docusaurus.v2/tree/main/docs/regex.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"React",permalink:"/docusaurus.v2/docs/react/"},next:{title:"shell",permalink:"/docusaurus.v2/docs/category/shell"}},s={},l=[],u={toc:l},p="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"regex"},"Regex"),(0,o.kt)("p",null,"To match a string that contains only those characters (or an empty string), try"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'"^[a-zA-Z0-9_]*$"\n')),(0,o.kt)("p",null,"This works for .NET regular expressions, and probably a lot of other languages as well."),(0,o.kt)("p",null,"Breaking it down:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"^ : start of string\n[ : beginning of character group\na-z : any lowercase letter\nA-Z : any uppercase letter\n0-9 : any digit\n_ : underscore\n] : end of character group\n* : zero or more of the given characters\n$ : end of string\n")),(0,o.kt)("p",null,"If you don't want to allow empty strings, use ",(0,o.kt)("inlineCode",{parentName:"p"},"+")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"*"),"."))}f.isMDXComponent=!0}}]);